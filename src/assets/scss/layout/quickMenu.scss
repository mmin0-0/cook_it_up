@use '@/assets/scss/_utils' as utils;

.quick{
  &-controls{
    @include utils.position(fixed, null, 2rem, null, clamp(2rem , (100vw - 780px) / 2, 100vw));
    @include utils.flexBox(column, null, null, 1rem);
    z-index: 10;
    > button{
      @include utils.flexBox(row, center, center);
      @include utils.size(4rem, 4rem);
      @include utils.radius(50%);
      background: $color-white;
      box-shadow: $shadow;
      font-size: $size-md;
    }
  }
  .zzim{
    max-width: 800px;
    @include utils.size(100%, 100vh);
    @include utils.position(fixed, 50%, null, 50%);
    transform: translate(-50%, -50%);
    z-index: 9;
    background: rgba($color-black, .65);
    visibility: hidden;
    z-index: -1;
    &-cont{
      @include utils.position(absolute, null, 2rem, null, 8rem);
      @include utils.radius(2rem);
      background: $color-white;
      padding: 1.2rem;
      max-width: 30rem;
      max-height: calc(100vh - 4rem);
      min-height: 200px;
      width: calc(100% - 10rem);
      display: flex;
      flex-direction: column;
      overflow-y: auto;
      .empty{
        color: $color-main;
        flex: 1;
        @include utils.flexBox(row, center, center);
      }
      .food-info{
        padding: .4rem;
        border-bottom: 1px solid $color-main;
        cursor: pointer;
        @include utils.transition(all);
        @include utils.flexBox(row, flex-start, center, .8rem);
        &:hover, &:focus, &:active{background: $color-sub}
        .preview-img{
          @include utils.size(10rem, 5rem);
          @include utils.radius(1rem);
          @include utils.overflowHide;
          min-width: 10rem;
          background-color: $color-gray-2;
        }
      }
    }
    &.on{
      visibility: visible;
      z-index: 9;
    }
  }
}